---
import type { GetStaticPaths } from "astro"
import { getCollection, type CollectionEntry } from "astro:content"
import Root from "@/layouts/Root.astro"
import Post from "@/layouts/Post.astro"
import Prose from "@/components/Prose.astro"
import Pagination from "@/components/Pagination.astro"
import ExternalLink from "@/components/ExternalLink.astro"
import { BottomMenu } from "@/components/bottom-menu"

export const getStaticPaths = (async () => {
  const chapters = await getCollection("chapters")
  return chapters.map((c) => {
    return {
      params: { chapter: c.slug },
      props: c,
    }
  })
}) satisfies GetStaticPaths

type Props = CollectionEntry<"chapters">

const { render, data } = Astro.props
const { Content, remarkPluginFrontmatter, headings } = await render()
---

<Root
  title={data.title}
  description={data.description}
  creator={`@${data.authorSocial}`}
  image={data.image?.src}
>
  <Post title={data.title}>
    <header class="mb-8 mt-4 md:mb-10">
      <div class="rounded-lg bg-muted/40 px-6 py-4 space-y-2">
        <p class="text-muted-foreground">
          {remarkPluginFrontmatter.minutesRead}
        </p>
        {
          data.proyect && (
            <menu class="flex gap-x-6 underline ">
              {data.proyect?.view && (
                <li>
                  <ExternalLink href={data.proyect.view}>
                    View demo
                  </ExternalLink>
                </li>
              )}
              {data.proyect?.source && (
                <li>
                  <ExternalLink href={data.proyect.source}>
                    Source code
                  </ExternalLink>
                </li>
              )}
            </menu>
          )
        }
      </div>
    </header>

    <main>
      <Prose>
        <h1>{data.title}</h1>
        <Content />
      </Prose>
    </main>

    <footer class="mb-20">
      <Pagination next={data.next} prev={data.prev} />
    </footer>
  </Post>

  <BottomMenu
    headings={[{ text: "Top", slug: "", depth: 2 }, ...headings]}
    client:only
  />
</Root>
